
存储引擎，也称为表类型：
MyISAM	:	无事物，表锁
	.frm:	表结构定义文件
	.MYD:	表数据
	.MYI:	索引
InnoDB：事物，行锁
	.frm:	表结构
	.ibd:	表空间(数据和索引)
	默认情况该存储引擎下，所有的表共享一个表空间，但是不建议使用，一般使用每个表使用一个表
	空间，但是安装完MySQL该配置没有启用，修改使其生效: innodb_file_per_table=1

SHOW ENGINES  
查询表的定义信息
SHOW TABLE STATUS LIKE 'user'\G

程序语言链接数据库的方式：
	动态SQL：通过函数或者方法和数据库服务建立链接
	嵌入式SQL：

客户端:mysql、mysqladmin、mysqldump、mysqlimport、mysqlcheck
服务端：mysqld、mysqld_safe、mysqld_multi

my.cnf
/etc/my.cnf	--> /etc/mysql/my.cnf	--> $MYSQL_HOME/my.cnf --> default-extra-file=path/to/somefile --> ~/.my.cnf

[mysqld]
[mysqld_safe]
[client]
[mysql]

查看mysql默认的配置信息
mysqld --help --verbose

显示数据库支持的字符集
show character set;
显示字符集的排序规则
show collation;

mysql中的函数执行一般是
select fun()
mysql中的存储过程执行一般是
call procedure()


启动失败原因
	1、此前服务未关闭
	2、数据初始化失败
	3、数据目录位置错误
	4、数据目录权限问题


Mysql数据类型:
    数值型
        精确数值
            tinyint     1个字节
            smallint    2个字节
            mediumint   3个字节
            int         4个字节
            bigint      8个字节
            decimal
        近似数值
            float
            double
            real
    字符型
        定长：char(255)，binary(区分大小写)
        变长: varchar(65535)、varbinary(区分大小写)
        text(tinytext(255)、text(65535)、mediumtext(16777215)、longtext(4294967295))
        blob(tingblob(255bit)、blob(64kb)、mediumblob(16MB)、longblob(4G))区分大小写
        ENUM、SET
    日期时间类型
        date(CCYY-MM-DD)
        time(hh:mm:ss)
        datetime(CCYY-MM-DD hh:mm:ss)
        timestamp(CCYY-MM-DD hh:mm:ss)
        year(CCYY or YY)

SQL模型：

MySQL服务器变量：
    作用域：
        全局变量:show global variables; select @@global.sql_mode
        回话变量:show session variables;select @@session.sqlmode
        设定变量:SET global|session 变量名='value'

    生效时间：
        可动态调整
        静态变量：写在配置文件中或者通过参数传给mysqld

    动态调整参数生效方式：
        全局：对当前会话无效，只对新建会话有效
        会话：即时生效，但是只对当前会话生效


SQL语句：
    
    数据库
    表
    索引
    视图
    DML

键都是索引，主键和唯一键都是特殊的索引，B+Tree

show indexes from table_name 显示某张表上的索引


1、SQL语句优化
2、索引优化
3、数据结构优化
4、InnoDB表优化
5、MyISAM表优化
6、Memory表优化
7、理解查询执行计划
8、缓冲和缓存
9、锁优化
10、MySQL服务器优化
11、性能评估
12、MySQL优化内幕


































